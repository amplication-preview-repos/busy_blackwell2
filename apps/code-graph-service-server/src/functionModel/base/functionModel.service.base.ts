/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FunctionModel as PrismaFunctionModel } from "@prisma/client";

export class FunctionModelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FunctionModelCountArgs, "select">
  ): Promise<number> {
    return this.prisma.functionModel.count(args);
  }

  async functionModels<T extends Prisma.FunctionModelFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FunctionModelFindManyArgs>
  ): Promise<PrismaFunctionModel[]> {
    return this.prisma.functionModel.findMany<Prisma.FunctionModelFindManyArgs>(
      args
    );
  }
  async functionModel<T extends Prisma.FunctionModelFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FunctionModelFindUniqueArgs>
  ): Promise<PrismaFunctionModel | null> {
    return this.prisma.functionModel.findUnique(args);
  }
  async createFunctionModel<T extends Prisma.FunctionModelCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FunctionModelCreateArgs>
  ): Promise<PrismaFunctionModel> {
    return this.prisma.functionModel.create<T>(args);
  }
  async updateFunctionModel<T extends Prisma.FunctionModelUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FunctionModelUpdateArgs>
  ): Promise<PrismaFunctionModel> {
    return this.prisma.functionModel.update<T>(args);
  }
  async deleteFunctionModel<T extends Prisma.FunctionModelDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FunctionModelDeleteArgs>
  ): Promise<PrismaFunctionModel> {
    return this.prisma.functionModel.delete(args);
  }
}
